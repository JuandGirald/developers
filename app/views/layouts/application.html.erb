<!DOCTYPE html>
<html>
<head>
  <title>Develpers</title>

  <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>
  <script type="text/javascript" src="http://www.heatmaptool.com/js/heatmap.js"></script>
  

  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
</head>
  
<body onload="initialize();">
  
<%= yield %>

<script>

  function initialize() {

      // Creates and inserts Google Map

      var mapOptions = {
        zoom: 4,
        center: new google.maps.LatLng(38, -97),
        mapTypeId: google.maps.MapTypeId.SATELLITE
      };

      var map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);

      // Constructs a heat map overlay

      var heatMap = new HeatMap({
        key: 'b970e8feb68d224349c09cd15fe2d272',
        data: 'http://www.heatmaptool.com/data/mcdonalds.csv',
        gradient: 'fire',
        scale_dimming: 0.5,
        radius: 5
      });

      // Adds heat map to Google Map

      heatMap.addTo(map);

    }

  // function gmap_show(developer) {
  //   // if ((developer.latitude == null) || (developer.longitude == null) ) {    // validation check if coordinates are there
  //   //   return 0;
  //   // }

  //   handler = Gmaps.build('Google');    // map init
  //   handler.buildMap({ provider: {}, internal: {id: 'multi_markers'}}, function(){
  //     var json_array = []
  //     for (i = 0, len = developer.length; i < 3000; ++i) {
        
  //       json_array.push(    // put marker method
  //         {
  //           "lat": developer[i].latitude,    // coordinates from parameter developer
  //           "lng": developer[i].longitude,
  //           "infowindow": "<b>" + developer[i].name + "</b> , " + developer[i].location
  //         }
  //       );
  //     }
  //     var markers = handler.addMarkers(json_array);

  //     handler.bounds.extendWith(markers);
  //     handler.fitMapToBounds();
  //     handler.getMap().setZoom(2);    // set the default zoom of the map
  //   });
  // }
</script>
</body>
</html>
